{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TrainingComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const n_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", n_r1.date, \" \\u2013 \", n_r1.note, \" \");\n  }\n}\nexport class TrainingComponent {\n  constructor(http) {\n    this.http = http;\n    this.notes = [];\n    this.newNote = {\n      date: '',\n      note: ''\n    };\n  }\n  ngOnInit() {\n    this.fetchNotes();\n  }\n  fetchNotes() {\n    this.http.get('/api/training').subscribe(data => {\n      this.notes = data;\n    });\n  }\n  addNote() {\n    this.http.post('/api/training', this.newNote).subscribe(() => {\n      this.newNote = {\n        date: '',\n        note: ''\n      };\n      this.fetchNotes();\n    });\n  }\n  static {\n    this.ɵfac = function TrainingComponent_Factory(t) {\n      return new (t || TrainingComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TrainingComponent,\n      selectors: [[\"app-training\"]],\n      decls: 9,\n      vars: 3,\n      consts: [[2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"gap\", \"0.5rem\", \"margin-bottom\", \"1rem\", 3, \"ngSubmit\"], [\"name\", \"date\", \"type\", \"date\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"note\", \"placeholder\", \"Anota\\u00E7\\u00F5es de treino\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function TrainingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Treinos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function TrainingComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.addNote();\n          });\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TrainingComponent_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newNote.date, $event) || (ctx.newNote.date = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TrainingComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newNote.note, $event) || (ctx.newNote.note = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 3);\n          i0.ɵɵtext(6, \"Registrar\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"ul\");\n          i0.ɵɵtemplate(8, TrainingComponent_li_8_Template, 2, 2, \"li\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newNote.date);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newNote.note);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.notes);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","n_r1","date","note","TrainingComponent","constructor","http","notes","newNote","ngOnInit","fetchNotes","get","subscribe","data","addNote","post","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","TrainingComponent_Template","rf","ctx","ɵɵlistener","TrainingComponent_Template_form_ngSubmit_2_listener","ɵɵtwoWayListener","TrainingComponent_Template_input_ngModelChange_3_listener","$event","ɵɵtwoWayBindingSet","TrainingComponent_Template_input_ngModelChange_4_listener","ɵɵtemplate","TrainingComponent_li_8_Template","ɵɵtwoWayProperty","ɵɵproperty"],"sources":["C:\\Users\\marco\\WebstormProjects\\kairoapp\\frontend-rotina\\src\\app\\training\\training.component.ts","C:\\Users\\marco\\WebstormProjects\\kairoapp\\frontend-rotina\\src\\app\\training\\training.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-training',\r\n  templateUrl: './training.component.html',\r\n  styleUrls: []\r\n})\r\nexport class TrainingComponent implements OnInit {\r\n  notes: any[] = [];\r\n  newNote = {\r\n    date: '',\r\n    note: ''\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchNotes();\r\n  }\r\n\r\n  fetchNotes() {\r\n    this.http.get<any[]>('/api/training').subscribe((data) => {\r\n      this.notes = data;\r\n    });\r\n  }\r\n\r\n  addNote() {\r\n    this.http.post('/api/training', this.newNote).subscribe(() => {\r\n      this.newNote = { date: '', note: '' };\r\n      this.fetchNotes();\r\n    });\r\n  }\r\n}","<h2>Treinos</h2>\r\n<form (ngSubmit)=\"addNote()\" style=\"display:flex; flex-wrap:wrap; gap:0.5rem; margin-bottom:1rem;\">\r\n  <input [(ngModel)]=\"newNote.date\" name=\"date\" type=\"date\" required />\r\n  <input [(ngModel)]=\"newNote.note\" name=\"note\" placeholder=\"Anotações de treino\" required />\r\n  <button type=\"submit\">Registrar</button>\r\n</form>\r\n<ul>\r\n  <li *ngFor=\"let n of notes\">\r\n    {{ n.date }} – {{ n.note }}\r\n  </li>\r\n</ul>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}