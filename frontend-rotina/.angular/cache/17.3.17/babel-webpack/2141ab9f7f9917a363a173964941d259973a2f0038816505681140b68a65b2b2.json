{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GoalsComponent_li_16_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" (\", g_r1.start_date, \" - \", g_r1.end_date || \"-\", \")\");\n  }\n}\nfunction GoalsComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, GoalsComponent_li_16_span_2_Template, 2, 2, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", g_r1.type === \"weekly\" ? \"Semanal\" : g_r1.type === \"monthly\" ? \"Mensal\" : \"Anual\", \": \", g_r1.description, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", g_r1.start_date);\n  }\n}\nexport class GoalsComponent {\n  constructor(http) {\n    this.http = http;\n    this.goals = [];\n    this.newGoal = {\n      description: '',\n      type: 'weekly',\n      start_date: '',\n      end_date: ''\n    };\n  }\n  ngOnInit() {\n    this.fetchGoals();\n  }\n  fetchGoals() {\n    this.http.get('/api/goals').subscribe(data => {\n      this.goals = data;\n    });\n  }\n  addGoal() {\n    this.http.post('/api/goals', this.newGoal).subscribe(() => {\n      this.newGoal = {\n        description: '',\n        type: 'weekly',\n        start_date: '',\n        end_date: ''\n      };\n      this.fetchGoals();\n    });\n  }\n  static {\n    this.ɵfac = function GoalsComponent_Factory(t) {\n      return new (t || GoalsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GoalsComponent,\n      selectors: [[\"app-goals\"]],\n      decls: 17,\n      vars: 5,\n      consts: [[2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"gap\", \"0.5rem\", \"margin-bottom\", \"1rem\", 3, \"ngSubmit\"], [\"name\", \"description\", \"placeholder\", \"Descri\\u00E7\\u00E3o\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"type\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"weekly\"], [\"value\", \"monthly\"], [\"value\", \"yearly\"], [\"name\", \"start_date\", \"type\", \"date\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"end_date\", \"type\", \"date\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"]],\n      template: function GoalsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Metas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function GoalsComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.addGoal();\n          });\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function GoalsComponent_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newGoal.description, $event) || (ctx.newGoal.description = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"select\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function GoalsComponent_Template_select_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newGoal.type, $event) || (ctx.newGoal.type = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(5, \"option\", 3);\n          i0.ɵɵtext(6, \"Semanal\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"option\", 4);\n          i0.ɵɵtext(8, \"Mensal\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"option\", 5);\n          i0.ɵɵtext(10, \"Anual\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function GoalsComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newGoal.start_date, $event) || (ctx.newGoal.start_date = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function GoalsComponent_Template_input_ngModelChange_12_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newGoal.end_date, $event) || (ctx.newGoal.end_date = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"button\", 8);\n          i0.ɵɵtext(14, \"Adicionar\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"ul\");\n          i0.ɵɵtemplate(16, GoalsComponent_li_16_Template, 3, 3, \"li\", 9);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newGoal.description);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newGoal.type);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newGoal.start_date);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newGoal.end_date);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.goals);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","g_r1","start_date","end_date","ɵɵtemplate","GoalsComponent_li_16_span_2_Template","type","description","ɵɵproperty","GoalsComponent","constructor","http","goals","newGoal","ngOnInit","fetchGoals","get","subscribe","data","addGoal","post","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","GoalsComponent_Template","rf","ctx","ɵɵlistener","GoalsComponent_Template_form_ngSubmit_2_listener","ɵɵtwoWayListener","GoalsComponent_Template_input_ngModelChange_3_listener","$event","ɵɵtwoWayBindingSet","GoalsComponent_Template_select_ngModelChange_4_listener","GoalsComponent_Template_input_ngModelChange_11_listener","GoalsComponent_Template_input_ngModelChange_12_listener","GoalsComponent_li_16_Template","ɵɵtwoWayProperty"],"sources":["C:\\Users\\marco\\Documents\\rotinaapp\\frontend-rotina\\src\\app\\goals\\goals.component.ts","C:\\Users\\marco\\Documents\\rotinaapp\\frontend-rotina\\src\\app\\goals\\goals.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-goals',\n  templateUrl: './goals.component.html',\n  styleUrls: []\n})\nexport class GoalsComponent implements OnInit {\n  goals: any[] = [];\n  newGoal = {\n    description: '',\n    type: 'weekly',\n    start_date: '',\n    end_date: ''\n  };\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.fetchGoals();\n  }\n\n  fetchGoals() {\n    this.http.get<any[]>('/api/goals').subscribe((data) => {\n      this.goals = data;\n    });\n  }\n\n  addGoal() {\n    this.http.post('/api/goals', this.newGoal).subscribe(() => {\n      this.newGoal = { description: '', type: 'weekly', start_date: '', end_date: '' };\n      this.fetchGoals();\n    });\n  }\n}","<h2>Metas</h2>\n<form (ngSubmit)=\"addGoal()\" style=\"display:flex; flex-wrap:wrap; gap:0.5rem; margin-bottom:1rem;\">\n  <input [(ngModel)]=\"newGoal.description\" name=\"description\" placeholder=\"Descrição\" required />\n  <select [(ngModel)]=\"newGoal.type\" name=\"type\">\n    <option value=\"weekly\">Semanal</option>\n    <option value=\"monthly\">Mensal</option>\n    <option value=\"yearly\">Anual</option>\n  </select>\n  <input [(ngModel)]=\"newGoal.start_date\" name=\"start_date\" type=\"date\" />\n  <input [(ngModel)]=\"newGoal.end_date\" name=\"end_date\" type=\"date\" />\n  <button type=\"submit\">Adicionar</button>\n</form>\n<ul>\n  <li *ngFor=\"let g of goals\">\n    {{ g.type === 'weekly' ? 'Semanal' : g.type === 'monthly' ? 'Mensal' : 'Anual' }}: {{ g.description }}\n    <span *ngIf=\"g.start_date\"> ({{ g.start_date }} - {{ g.end_date || '-' }})</span>\n  </li>\n</ul>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}