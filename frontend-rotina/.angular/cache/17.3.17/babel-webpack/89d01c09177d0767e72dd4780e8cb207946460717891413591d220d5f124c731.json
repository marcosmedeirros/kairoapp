{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DietComponent_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const log_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate6(\" \", log_r1.date, \" \\u2013 Caf\\u00E9: \", log_r1.breakfast || \"-\", \", Almo\\u00E7o: \", log_r1.lunch || \"-\", \", Jantar: \", log_r1.dinner || \"-\", \", Lanches: \", log_r1.snacks || \"-\", \", Notas: \", log_r1.notes || \"-\", \" \");\n  }\n}\nexport class DietComponent {\n  constructor(http) {\n    this.http = http;\n    this.logs = [];\n    this.newLog = {\n      date: '',\n      breakfast: '',\n      lunch: '',\n      dinner: '',\n      snacks: '',\n      notes: ''\n    };\n  }\n  ngOnInit() {\n    this.fetchLogs();\n  }\n  fetchLogs() {\n    this.http.get('/api/diet').subscribe(data => {\n      this.logs = data;\n    });\n  }\n  addLog() {\n    this.http.post('/api/diet', this.newLog).subscribe(() => {\n      this.newLog = {\n        date: '',\n        breakfast: '',\n        lunch: '',\n        dinner: '',\n        snacks: '',\n        notes: ''\n      };\n      this.fetchLogs();\n    });\n  }\n  static {\n    this.ɵfac = function DietComponent_Factory(t) {\n      return new (t || DietComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DietComponent,\n      selectors: [[\"app-diet\"]],\n      decls: 13,\n      vars: 7,\n      consts: [[2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"gap\", \"0.5rem\", \"margin-bottom\", \"1rem\", 3, \"ngSubmit\"], [\"name\", \"date\", \"type\", \"date\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"breakfast\", \"placeholder\", \"Caf\\u00E9 da manh\\u00E3\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"lunch\", \"placeholder\", \"Almo\\u00E7o\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"dinner\", \"placeholder\", \"Jantar\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"snacks\", \"placeholder\", \"Lanches\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"notes\", \"placeholder\", \"Notas\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function DietComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Dietas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function DietComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.addLog();\n          });\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DietComponent_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newLog.date, $event) || (ctx.newLog.date = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DietComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newLog.breakfast, $event) || (ctx.newLog.breakfast = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DietComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newLog.lunch, $event) || (ctx.newLog.lunch = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DietComponent_Template_input_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newLog.dinner, $event) || (ctx.newLog.dinner = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DietComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newLog.snacks, $event) || (ctx.newLog.snacks = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DietComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newLog.notes, $event) || (ctx.newLog.notes = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 7);\n          i0.ɵɵtext(10, \"Registrar\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"ul\");\n          i0.ɵɵtemplate(12, DietComponent_li_12_Template, 2, 6, \"li\", 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newLog.date);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newLog.breakfast);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newLog.lunch);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newLog.dinner);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newLog.snacks);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newLog.notes);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.logs);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate6","log_r1","date","breakfast","lunch","dinner","snacks","notes","DietComponent","constructor","http","logs","newLog","ngOnInit","fetchLogs","get","subscribe","data","addLog","post","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","DietComponent_Template","rf","ctx","ɵɵlistener","DietComponent_Template_form_ngSubmit_2_listener","ɵɵtwoWayListener","DietComponent_Template_input_ngModelChange_3_listener","$event","ɵɵtwoWayBindingSet","DietComponent_Template_input_ngModelChange_4_listener","DietComponent_Template_input_ngModelChange_5_listener","DietComponent_Template_input_ngModelChange_6_listener","DietComponent_Template_input_ngModelChange_7_listener","DietComponent_Template_input_ngModelChange_8_listener","ɵɵtemplate","DietComponent_li_12_Template","ɵɵtwoWayProperty","ɵɵproperty"],"sources":["C:\\Users\\marco\\WebstormProjects\\kairoapp\\frontend-rotina\\src\\app\\diet\\diet.component.ts","C:\\Users\\marco\\WebstormProjects\\kairoapp\\frontend-rotina\\src\\app\\diet\\diet.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-diet',\r\n  templateUrl: './diet.component.html',\r\n  styleUrls: []\r\n})\r\nexport class DietComponent implements OnInit {\r\n  logs: any[] = [];\r\n  newLog = {\r\n    date: '',\r\n    breakfast: '',\r\n    lunch: '',\r\n    dinner: '',\r\n    snacks: '',\r\n    notes: ''\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchLogs();\r\n  }\r\n\r\n  fetchLogs() {\r\n    this.http.get<any[]>('/api/diet').subscribe((data) => {\r\n      this.logs = data;\r\n    });\r\n  }\r\n\r\n  addLog() {\r\n    this.http.post('/api/diet', this.newLog).subscribe(() => {\r\n      this.newLog = { date: '', breakfast: '', lunch: '', dinner: '', snacks: '', notes: '' };\r\n      this.fetchLogs();\r\n    });\r\n  }\r\n}","<h2>Dietas</h2>\r\n<form (ngSubmit)=\"addLog()\" style=\"display:flex; flex-wrap:wrap; gap:0.5rem; margin-bottom:1rem;\">\r\n  <input [(ngModel)]=\"newLog.date\" name=\"date\" type=\"date\" required />\r\n  <input [(ngModel)]=\"newLog.breakfast\" name=\"breakfast\" placeholder=\"Café da manhã\" />\r\n  <input [(ngModel)]=\"newLog.lunch\" name=\"lunch\" placeholder=\"Almoço\" />\r\n  <input [(ngModel)]=\"newLog.dinner\" name=\"dinner\" placeholder=\"Jantar\" />\r\n  <input [(ngModel)]=\"newLog.snacks\" name=\"snacks\" placeholder=\"Lanches\" />\r\n  <input [(ngModel)]=\"newLog.notes\" name=\"notes\" placeholder=\"Notas\" />\r\n  <button type=\"submit\">Registrar</button>\r\n</form>\r\n<ul>\r\n  <li *ngFor=\"let log of logs\">\r\n    {{ log.date }} – Café: {{ log.breakfast || '-' }}, Almoço: {{ log.lunch || '-' }}, Jantar: {{ log.dinner || '-' }}, Lanches: {{ log.snacks || '-' }}, Notas: {{ log.notes || '-' }}\r\n  </li>\r\n</ul>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}