{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CalendarComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activity_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", activity_r1.date, \" \", activity_r1.time, \" \\u2013 \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r1.title);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", activity_r1.description ? \"(\" + activity_r1.description + \")\" : \"\", \" \");\n  }\n}\nexport class CalendarComponent {\n  constructor(http) {\n    this.http = http;\n    this.activities = [];\n    this.newActivity = {\n      title: '',\n      description: '',\n      date: '',\n      time: ''\n    };\n  }\n  ngOnInit() {\n    this.fetchActivities();\n  }\n  fetchActivities() {\n    this.http.get('/api/activities').subscribe(data => {\n      this.activities = data;\n    });\n  }\n  addActivity() {\n    this.http.post('/api/activities', this.newActivity).subscribe(() => {\n      // Limpa o formulário e recarrega a lista\n      this.newActivity = {\n        title: '',\n        description: '',\n        date: '',\n        time: ''\n      };\n      this.fetchActivities();\n    });\n  }\n  static {\n    this.ɵfac = function CalendarComponent_Factory(t) {\n      return new (t || CalendarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CalendarComponent,\n      selectors: [[\"app-calendar\"]],\n      decls: 11,\n      vars: 5,\n      consts: [[2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"gap\", \"0.5rem\", \"margin-bottom\", \"1rem\", 3, \"ngSubmit\"], [\"name\", \"title\", \"placeholder\", \"T\\u00EDtulo\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"description\", \"placeholder\", \"Descri\\u00E7\\u00E3o\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"date\", \"type\", \"date\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"time\", \"type\", \"time\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function CalendarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Agenda\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function CalendarComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.addActivity();\n          });\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CalendarComponent_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newActivity.title, $event) || (ctx.newActivity.title = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CalendarComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newActivity.description, $event) || (ctx.newActivity.description = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CalendarComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newActivity.date, $event) || (ctx.newActivity.date = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CalendarComponent_Template_input_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newActivity.time, $event) || (ctx.newActivity.time = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵtext(8, \"Adicionar\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"ul\");\n          i0.ɵɵtemplate(10, CalendarComponent_li_10_Template, 5, 4, \"li\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newActivity.title);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newActivity.description);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newActivity.date);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newActivity.time);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.activities);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","activity_r1","date","time","ɵɵtextInterpolate","title","ɵɵtextInterpolate1","description","CalendarComponent","constructor","http","activities","newActivity","ngOnInit","fetchActivities","get","subscribe","data","addActivity","post","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","CalendarComponent_Template","rf","ctx","ɵɵlistener","CalendarComponent_Template_form_ngSubmit_2_listener","ɵɵtwoWayListener","CalendarComponent_Template_input_ngModelChange_3_listener","$event","ɵɵtwoWayBindingSet","CalendarComponent_Template_input_ngModelChange_4_listener","CalendarComponent_Template_input_ngModelChange_5_listener","CalendarComponent_Template_input_ngModelChange_6_listener","ɵɵtemplate","CalendarComponent_li_10_Template","ɵɵtwoWayProperty","ɵɵproperty"],"sources":["C:\\Users\\marco\\Documents\\rotinaapp\\frontend-rotina\\src\\app\\calendar\\calendar.component.ts","C:\\Users\\marco\\Documents\\rotinaapp\\frontend-rotina\\src\\app\\calendar\\calendar.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: []\n})\nexport class CalendarComponent implements OnInit {\n  activities: any[] = [];\n  newActivity = {\n    title: '',\n    description: '',\n    date: '',\n    time: ''\n  };\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.fetchActivities();\n  }\n\n  fetchActivities() {\n    this.http.get<any[]>('/api/activities').subscribe((data) => {\n      this.activities = data;\n    });\n  }\n\n  addActivity() {\n    this.http.post('/api/activities', this.newActivity).subscribe(() => {\n      // Limpa o formulário e recarrega a lista\n      this.newActivity = { title: '', description: '', date: '', time: '' };\n      this.fetchActivities();\n    });\n  }\n}","<h2>Agenda</h2>\n<form (ngSubmit)=\"addActivity()\" style=\"display:flex; flex-wrap:wrap; gap:0.5rem; margin-bottom:1rem;\">\n  <input [(ngModel)]=\"newActivity.title\" name=\"title\" placeholder=\"Título\" required />\n  <input [(ngModel)]=\"newActivity.description\" name=\"description\" placeholder=\"Descrição\" />\n  <input [(ngModel)]=\"newActivity.date\" name=\"date\" type=\"date\" required />\n  <input [(ngModel)]=\"newActivity.time\" name=\"time\" type=\"time\" required />\n  <button type=\"submit\">Adicionar</button>\n</form>\n<ul>\n  <li *ngFor=\"let activity of activities\">\n    {{ activity.date }} {{ activity.time }} – <strong>{{ activity.title }}</strong> {{ activity.description ? '(' + activity.description + ')' : '' }}\n  </li>\n</ul>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}